{"version":3,"sources":["components/DimensionsProvider.js","components/SoundfontProvider.js","components/PianoWithRecord.js","components/PianoKey.js","components/App.js","index.js"],"names":["DimensionsProvider","this","props","children","containerWidth","containerHeight","React","Component","Dimensions","SoundfontProvider","loadInstrument","instrumentName","setState","instrument","Soundfont","audioContext","format","soundfont","nameToUrl","name","hostname","then","playNote","midiNumber","resume","audioNode","state","play","activeAudioNodes","Object","assign","stopNote","stop","stopAllNotes","values","forEach","node","prevProps","prevState","render","isLoading","defaultProps","PianoWithRecord","keysDown","noteDuration","onPlayNoteInput","notesRecorded","onStopNoteInput","prevActiveNotes","recordNotes","midiNumbers","duration","recording","mode","newEvents","map","time","currentTime","setRecording","events","concat","pianoProps","currentEvents","activeNotes","event","window","AudioContext","webkitAudioContext","noteRange","first","MidiNumbers","fromNote","last","PianoKey","getRecordingEndTime","length","Math","max","value","onClickPlay","_","uniq","flatMap","scheduledEvents","push","setTimeout","filter","onClickStop","scheduledEvent","clearTimeout","onClickClear","className","width","disabled","onClick","App","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.4b51d34d.chunk.js","sourcesContent":["import React from 'react';\nimport Dimensions from 'react-dimensions';\n\nclass DimensionsProvider extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.children({\n          containerWidth: this.props.containerWidth,\n          containerHeight: this.props.containerHeight,\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Dimensions()(DimensionsProvider);\n","// See https://github.com/danigb/soundfont-player\n// for more documentation on prop options.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Soundfont from 'soundfont-player';\n\nclass SoundfontProvider extends React.Component {\n  static propTypes = {\n    instrumentName: PropTypes.string.isRequired,\n    hostname: PropTypes.string.isRequired,\n    format: PropTypes.oneOf(['mp3', 'ogg']),\n    soundfont: PropTypes.oneOf(['MusyngKite', 'FluidR3_GM']),\n    audioContext: PropTypes.instanceOf(window.AudioContext),\n    render: PropTypes.func,\n  };\n\n  static defaultProps = {\n    format: 'mp3',\n    soundfont: 'MusyngKite',\n    instrumentName: 'acoustic_grand_piano',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeAudioNodes: {},\n      instrument: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadInstrument(this.props.instrumentName);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.instrumentName !== this.props.instrumentName) {\n      this.loadInstrument(this.props.instrumentName);\n    }\n  }\n\n  loadInstrument = instrumentName => {\n    // Re-trigger loading state\n    this.setState({\n      instrument: null,\n    });\n    Soundfont.instrument(this.props.audioContext, instrumentName, {\n      format: this.props.format,\n      soundfont: this.props.soundfont,\n      nameToUrl: (name, soundfont, format) => {\n        return `${this.props.hostname}/${soundfont}/${name}-${format}.js`;\n      },\n    }).then(instrument => {\n      this.setState({\n        instrument,\n      });\n    });\n  };\n\n  playNote = midiNumber => {\n    this.props.audioContext.resume().then(() => {\n      const audioNode = this.state.instrument.play(midiNumber);\n      this.setState({\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\n          [midiNumber]: audioNode,\n        }),\n      });\n    });\n  };\n\n  stopNote = midiNumber => {\n    this.props.audioContext.resume().then(() => {\n      if (!this.state.activeAudioNodes[midiNumber]) {\n        return;\n      }\n      const audioNode = this.state.activeAudioNodes[midiNumber];\n      audioNode.stop();\n      this.setState({\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\n          [midiNumber]: null,\n        }),\n      });\n    });\n  };\n\n  // Clear any residual notes that don't get called with stopNote\n  stopAllNotes = () => {\n    this.props.audioContext.resume().then(() => {\n      const activeAudioNodes = Object.values(this.state.activeAudioNodes);\n      activeAudioNodes.forEach(node => {\n        if (node) {\n          node.stop();\n        }\n      });\n      this.setState({\n        activeAudioNodes: {},\n      });\n    });\n  };\n\n  render() {\n    return this.props.render({\n      isLoading: !this.state.instrument,\n      playNote: this.playNote,\n      stopNote: this.stopNote,\n      stopAllNotes: this.stopAllNotes,\n    });\n  }\n}\n\nexport default SoundfontProvider;\n","import React from 'react';\nimport { Piano } from 'react-piano';\n\nconst DURATION_UNIT = 0.2;\nconst DEFAULT_NOTE_DURATION = DURATION_UNIT;\n\nclass PianoWithRecord extends React.Component {\n  static defaultProps = {\n    notesRecorded: false,\n  };\n\n  state = {\n    keysDown: {},\n    noteDuration: DEFAULT_NOTE_DURATION,\n  };\n\n  onPlayNoteInput = midiNumber => {\n    this.setState({\n      notesRecorded: false,\n    });\n  };\n\n  onStopNoteInput = (midiNumber, { prevActiveNotes }) => {\n    if (this.state.notesRecorded === false) {\n      this.recordNotes(prevActiveNotes, this.state.noteDuration);\n      this.setState({\n        notesRecorded: true,\n        noteDuration: DEFAULT_NOTE_DURATION,\n      });\n    }\n  };\n\n  recordNotes = (midiNumbers, duration) => {\n    if (this.props.recording.mode !== 'RECORDING') {\n      return;\n    }\n    const newEvents = midiNumbers.map(midiNumber => {\n      return {\n        midiNumber,\n        time: this.props.recording.currentTime,\n        duration: duration,\n      };\n    });\n    this.props.setRecording({\n      events: this.props.recording.events.concat(newEvents),\n      currentTime: this.props.recording.currentTime + duration,\n    });\n  };\n\n  render() {\n    const {\n      playNote,\n      stopNote,\n      recording,\n      setRecording,\n      ...pianoProps\n    } = this.props;\n\n    const { mode, currentEvents } = this.props.recording;\n    const activeNotes = mode === 'PLAYING' ? currentEvents.map(event => event.midiNumber) : null;\n    return (\n      <div>\n        <Piano\n          playNote={this.props.playNote}\n          stopNote={this.props.stopNote}\n          onPlayNoteInput={this.onPlayNoteInput}\n          onStopNoteInput={this.onStopNoteInput}\n          activeNotes={activeNotes}\n          {...pianoProps}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PianoWithRecord;\n","import React from 'react';\nimport { MidiNumbers } from 'react-piano';\nimport 'react-piano/dist/styles.css';\nimport _ from 'lodash';\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\nimport PianoWithRecord from './PianoWithRecord';\nimport './App.css';\n\n\n\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst soundfontHostname = \"https://d1pzp51pvbm36p.cloudfront.net\";\nconst noteRange = {\n\tfirst: MidiNumbers.fromNote(\"c2\"),\n\tlast: MidiNumbers.fromNote(\"f5\")\n};\n\n\n\nclass PianoKey extends React.Component {\n\tstate = {\n    recording: {\n      mode: 'RECORDING',\n      events: [],\n      currentTime: 0,\n      currentEvents: [],\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.scheduledEvents = [];\n  }\n\n  getRecordingEndTime = () => {\n    if (this.state.recording.events.length === 0) {\n      return 0;\n    }\n    return Math.max(\n      ...this.state.recording.events.map(event => event.time + event.duration),\n    );\n  };\n\n  setRecording = value => {\n    this.setState({\n      recording: Object.assign({}, this.state.recording, value),\n    });\n  };\n\n  onClickPlay = () => {\n    this.setRecording({\n      mode: 'PLAYING',\n    });\n    const startAndEndTimes = _.uniq(\n      _.flatMap(this.state.recording.events, event => [\n        event.time,\n        event.time + event.duration,\n      ]),\n    );\n    startAndEndTimes.forEach(time => {\n      this.scheduledEvents.push(\n        setTimeout(() => {\n          const currentEvents = this.state.recording.events.filter(event => {\n            return event.time <= time && event.time + event.duration > time;\n          });\n          this.setRecording({\n            currentEvents,\n          });\n        }, time * 1000),\n      );\n    });\n    // Stop at the end\n    setTimeout(() => {\n      this.onClickStop();\n    }, this.getRecordingEndTime() * 1000);\n  };\n\n  onClickStop = () => {\n    this.scheduledEvents.forEach(scheduledEvent => {\n      clearTimeout(scheduledEvent);\n    });\n    this.setRecording({\n      mode: 'RECORDING',\n      currentEvents: [],\n    });\n  };\n\n  onClickClear = () => {\n    this.onClickStop();\n    this.setRecording({\n      events: [],\n      mode: 'RECORDING',\n      currentEvents: [],\n      currentTime: 0,\n    });\n  };\n\n\trender(){\n\t\treturn (\n\t\t\t<>\n\t\t\t<DimensionsProvider>\n\t\t\t\t{({ containerWidth, containerHeight }) => (\n\t\t\t\t\t<SoundfontProvider\n\t\t\t\t\t\tinstrumentName=\"acoustic_grand_piano\"\n\t\t\t\t\t\taudioContext={audioContext}\n\t\t\t\t\t\thostname={soundfontHostname}\n\t\t\t\t\t\trender={({ isLoading, playNote, stopNote }) => (\n\t\t\t\t\t\t\t<PianoWithRecord className=\"PianoDarkTheme\"\n\t\t\t\t\t\t\t\trecording={this.state.recording}\n                setRecording={this.setRecording}\n\t\t\t\t\t\t\t\tnoteRange={noteRange}\n\t\t\t\t\t\t\t\twidth={containerWidth}\n\t\t\t\t\t\t\t\tplayNote={playNote}\n\t\t\t\t\t\t\t\tstopNote={stopNote}\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\n\t\t\t\t)}\n\t\t\t</DimensionsProvider>\n\t\t\t<div className=\"button-group\">\n\t\t\t\t\t<button className=\"ui labeled icon button\" onClick={this.onClickPlay}><i className=\"play icon\"></i>Play</button>\n\t\t\t\t\t<button className=\"ui labeled icon button\" onClick={this.onClickStop}><i className=\"pause icon\"></i>Pause</button>\n\t\t\t\t\t<button className=\"ui labeled icon button\" onClick={this.onClickClear}><i className=\"stop icon\"></i>Clear</button>\n\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n\n}\n\nexport default PianoKey;","import React from 'react';\nimport PianoKey from './PianoKey'\n\nconst App = () => {\n    return (\n        <div className=\"ui container\">\n            <h1>Try the Piano!</h1>\n            <PianoKey />\n        </div>\n    )\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n)"],"sourceRoot":""}